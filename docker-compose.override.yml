version: "3.9"

services:
  ec_de_a:
    build:
      context: .
      dockerfile: ./EC_DE/Dockerfile
    image: ec-de:latest
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://${POSTGRES_IP}:5432/easycab # Usa la IP del host
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_APPLICATION_NAME: EC_DE
      SPRING_KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_IP}:9092
      CENTRAL_IP: ${CENTRAL_IP}
      CENTRAL_PORT: ${CENTRAL_PORT}
      TAXI_ID: 1  # Identificador espec√≠fico para esta instancia
      SENSOR_PORT: ${SENSOR_PORT_A}
    ports:
      - "${HOST_PORT_A}:${CONTAINER_PORT_A}"
    networks:
      - easycab_network

  ec_de_b:
    build:
      context: .
      dockerfile: ./EC_DE/Dockerfile
    image: ec-de:latest
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://${POSTGRES_IP}:5432/easycab
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_APPLICATION_NAME: EC_DE
      SPRING_KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_IP}:9092
      CENTRAL_IP: ${CENTRAL_IP}
      CENTRAL_PORT: ${CENTRAL_PORT}
      TAXI_ID: 2
      SENSOR_PORT: ${SENSOR_PORT_B}
    ports:
      - "${HOST_PORT_B}:${CONTAINER_PORT_B}"
    networks:
      - easycab_network

  ec_de_c:
    build:
      context: .
      dockerfile: ./EC_DE/Dockerfile
    image: ec-de:latest
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://${POSTGRES_IP}:5432/easycab
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_APPLICATION_NAME: EC_DE
      SPRING_KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_IP}:9092
      CENTRAL_IP: ${CENTRAL_IP}
      CENTRAL_PORT: ${CENTRAL_PORT}
      TAXI_ID: 3
      SENSOR_PORT: ${SENSOR_PORT_C}
    ports:
      - "${HOST_PORT_C}:${CONTAINER_PORT_C}"
    networks:
      - easycab_network

  ec_customer_a:
    build:
      context: .
      dockerfile: ./EC_Customer/Dockerfile
    image: ec-customer:latest
    environment:
      SPRING_APPLICATION_NAME: EC_Customer
      SPRING_KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_IP}:9092
      CLIENT_ID: "a"
      broker.address: ${KAFKA_IP}:9092
      file: destinations1.txt
    ports:
      - "${CUSTOMER_PORT_A}:${CONTAINER_PORT_CUSTOMER}"
    networks:
      - easycab_network

  ec_customer_b:
    build:
      context: .
      dockerfile: ./EC_Customer/Dockerfile
    image: ec-customer:latest
    environment:
      SPRING_APPLICATION_NAME: EC_Customer
      SPRING_KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_IP}:9092
      CLIENT_ID: "b"
      broker.address: ${KAFKA_IP}:9092
      file: destinations2.txt
    ports:
      - "${CUSTOMER_PORT_B}:${CONTAINER_PORT_CUSTOMER}"
    networks:
      - easycab_network

  ec_customer_c:
    build:
      context: .
      dockerfile: ./EC_Customer/Dockerfile
    image: ec-customer:latest
    environment:
      SPRING_APPLICATION_NAME: EC_Customer
      SPRING_KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_IP}:9092
      CLIENT_ID: "c"
      broker.address: ${KAFKA_IP}:9092
      file: destinations3.txt
    ports:
      - "${CUSTOMER_PORT_C}:${CONTAINER_PORT_CUSTOMER}"
    networks:
      - easycab_network

  ec_s_a:
    build:
      context: .
      dockerfile: ./EC_S/Dockerfile
    image: ec-s:latest
    environment:
      SPRING_APPLICATION_NAME: EC_S
      DE_IP: ${DE_IP_A}
      DE_PORT: ${DE_PORT_A}
    ports:
      - "${SENSOR_HOST_PORT_A}:${SENSOR_CONTAINER_PORT}"
    networks:
      - easycab_network

  ec_s_b:
    build:
      context: .
      dockerfile: ./EC_S/Dockerfile
    image: ec-s:latest
    environment:
      SPRING_APPLICATION_NAME: EC_S
      DE_IP: ${DE_IP_B}
      DE_PORT: ${DE_PORT_B}
    ports:
      - "${SENSOR_HOST_PORT_B}:${SENSOR_CONTAINER_PORT}"
    networks:
      - easycab_network

networks:
  easycab_network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.100.0/24 # Nueva subred